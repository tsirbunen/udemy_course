name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        # Action ohjaa tallettamaan pathissa olevan kohteen GitHubin cloudiin 
        uses: actions/cache@v3
        with:
          # Kun npm tekee installaation, se jo itsessään luo oman internal dependency cachen, 
          # joka on tuo .npm, ja jota nyt hyödynnetään (siellä on ne meidän dependencies,
          # joita käyttäisimme joka tapauksessa). Joka jobissa on ilman tätä meidän cachingia
          # installoitava uudellee, koska jobit ajetaan eri koneilla, eikä niillä ole ilman
          # tätä tarjolla tämä cache (koneiden välillä)
          path: ~/.npm 
          # Retrieving and recreating on runner machine; also indicatess whether cache 
          # should be discarded (jos cache pitää muuttaa) > annettava muuttujanimi, joka voi muttua.
          # Alla otetaan GitHub kontekstista funktio hashFiles, joka hashaa kaikki package-lock.json-
          # tiedostot, ja jos jossain niistä on muutoksia, muuttuu key, ja silloin tiedetään, että
          # cache on invalid ja pitää muuttaa > dependencies pitää installoida.
          # (Node mudulit siis aina installoidaan, mutta jos on validi cache, käytetään sitä apuna.)
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test


  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.something }}

    steps:
      - name: Get code
        uses: actions/checkout@v3

      # Huomaa, että myös täällä on tehtävä cache-temput!
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm 
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      
      - name: Echo js-file name
        run: find dist/assets/*.js -type f -execdir echo '{}' ';'
      - name: Publish js-file name
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'something={}' >> $GITHUB_OUTPUT ';'     
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: dist-files
          path: dist


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Output simple value file name
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents list
        run: ls
      - name: Deploy
        run: echo "Deploying..."
